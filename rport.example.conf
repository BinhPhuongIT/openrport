# Specifies log file path
log_file = "/tmp/rport.log"

# Specify log level. Values: 'error', 'info', 'debug'.
# Defaults to 'error'
log_level = "info"

# rportd server address
server = "rportd.lan:9000"

# fingerprint string to perform host-key validation against the server's public key
# fingerprint = ""

# An optional username and password (client authentication) in the form: "<user>:<pass>"
auth = "user1:1234"

# An optional HTTP CONNECT or SOCKS5 proxy which will be used to reach the rport server.
# Authentication can be specified inside the URL
proxy = "http://admin:password@my-server.com:8081"

# client ID
id = "client id #1"

# client name
name = "my_win_vm_1"

# client tags
tags = ['win', 'server', 'vm']

# remote connections tunneled through the server, each of which come in the form:
#   <local-interface>:<local-port>:<remote-host>:<remote-port>
#   or
#   <remote-host>:<remote-port>
# sharing <remote-host>:<remote-port> from the client to the server's <local-interface>:<local-port>
remotes = [
  '3389:3389',
  '5050'
]

[connection]
  # An optional keepalive interval. You must specify a time with a unit, for example '30s' or '2m'.
  # Defaults to '0s' (disabled)
  keep_alive = '30s'

  # Maximum number of times to retry before exiting. Defaults to unlimited (-1)
  max_retry_count = 10

  # Maximum wait time before retrying after a disconnection. Defaults to 5 minutes
  max_retry_interval = '5m'

  # Optionally set the 'Host' header (defaults to the host found in the server url)
  hostname = "myvm1.lan"

  # Other custom headers in the form "HeaderName: HeaderContent"
  headers = ['User-Agent: test1', 'Authorization: Basic XXXXXX']
